[
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "config.myCustomSettings.vimKeyBindings.enabled"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "space ,",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "shift+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "vim.mode !== 'Insert' && editorTextFocus"
    },
    {
        "key": "shift+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "vim.mode !== 'Insert' && editorTextFocus"
    },
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space c a",
        "command": "editor.action.codeAction",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space c r",
        "command": "editor.action.rename",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space g d",
        "command": "editor.action.revealDefinition",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g r",
        "command": "editor.action.goToReferences",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g s",
        "command": "workbench.action.findInFiles",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space g f",
        "command": "workbench.view.explorer",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "v",
        "command": "list.selectAndPreserveFocus",
        "when": "sideBarFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "v",
        "command": "list.select",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+s",
        "command": "runCommands",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "args": {
            "commands": [
                "workbench.action.splitEditorDown",
                "explorer.openAndPassFocus",
                "workbench.action.closeOtherEditors"
            ]
        }
    },
    {
        "key": "space g g",
        "command": "runCommands",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
        "args": {
            "commands": [
                "workbench.view.scm"
            ]
        }
    },
    {
        "key": "enter",
        "command": "git.openFile",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
    },
    {
        "key": "i",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus",
        "args": {
            "commands": [
                "list.focusFirst",
                "list.select"
            ]
        }
    },
    {
        "key": "escape",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && inputFocus",
        "args": {
            "commands": [
                "list.focusDown"
            ]
        }
    },
    {
        "key": "s",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus",
        "args": {
            "commands": [
                "git.stage",
                "list.focusAnyUp",
                "list.selectAndPreserveFocus"
            ]
        }
    },
    {
        "key": "shift+s",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus",
        "args": {
            "commands": [
                "git.unstage",
                "list.focusAnyUp",
                "list.selectAndPreserveFocus"
            ]
        }
    },
    {
        "key": "e",
        "command": "git.stageAll",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
    },
    {
        "key": "shift+e",
        "command": "git.unstageAll",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
    },
    {
        "key": "space g e",
        "command": "runCommands",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
        "args": {
            "commands": [
                "workbench.view.extensions"
            ]
        }
    },
    {
        "key": "i",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions' && !inputFocus",
        "args": {
            "commands": [
                "workbench.extensions.search"
            ]
        }
    },
    {
        "key": "enter",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions' && !inputFocus",
        "args": {
            "commands": [
                "workbench.extensions.installExtension"
            ]
        }
    },
    {
        "key": "escape",
        "command": "runCommands",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions' && inputFocus",
        "args": {
            "commands": [
                "list.focusDown"
            ]
        }
    },
    {
        "key": "cmd+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorFocus && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "editorFocus && github.copilot.chat.editor.enableLineTrigger && inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    }
]